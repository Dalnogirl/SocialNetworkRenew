{"version":3,"sources":["Components/Profile/ProfileInfo/ProfileInfo.module.scss","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","HOC/withAuthRedirect.tsx","assets/images/changeAvatar.svg","Components/Profile/Post/Post.module.scss","Components/Profile/MyPosts/PostTextarea/PostTextarea.module.scss","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/Profile/ProfileInfo/Status/Status.tsx","Components/Profile/ProfileInfo/ProfileContactForm/ProfileContactForm.js","Components/Profile/ProfileInfo/ProfileInfo.tsx","Components/Profile/Post/Post.tsx","Components/Profile/MyPosts/PostTextarea/PostTextarea.js","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/MyPosts/MyPostsContainer.tsx","Components/Profile/Profile.tsx","Components/Profile/ProfileContainer.tsx"],"names":["module","exports","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","_slicedToArray","arr","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","unsupportedIterableToArray","TypeError","Status","status","updateUserStatus","useState","editModeFlag","setEditMode","statusText","setStatusText","useEffect","className","style","autoFocus","onBlur","_","onChange","e","currentTarget","onClick","ProfileContactForm","toggleEditMode","contacts","onSubmit","formData","console","log","handleSubmit","map","name","initialValue","input","meta","field","type","touched","error","ChangePhoto","isOwner","changeUserPhoto","customFileUpload","changeAvatar","src","alt","files","Contact","contactKey","contactValue","ProfileInfo","editMode","profile","profileInfo","description","profileImage","photos","large","icon","profileData","nameAndChangePhoto","fullName","Loader","Post","post","post_icon","post_content","text","deletePostButton","deletePost","id","PostTextarea","addPost","postText","action","placeholder","component","validate","maxLength","styles","textareaAndLabel","textarea","React","memo","my_posts","posts","reverse","obj","profileActions","MyPostsContainer","MyPosts","Profile","compose","getProfile","getStatus","getProfileById","getUserStatusById","withRouter","userId","match","params"],"mappings":"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","file":"static/js/3.ce9f6915.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__3vX_X\",\"profileImage\":\"ProfileInfo_profileImage__1TXBi\",\"status\":\"ProfileInfo_status__KoIAQ\",\"contacts\":\"ProfileInfo_contacts__pUwn6\",\"field\":\"ProfileInfo_field__1JtHR\",\"nameAndChangePhoto\":\"ProfileInfo_nameAndChangePhoto__3vM9E\",\"profileData\":\"ProfileInfo_profileData__2bXHD\",\"changeAvatar\":\"ProfileInfo_changeAvatar__3cWoR\",\"customFileUpload\":\"ProfileInfo_customFileUpload__1x2C3\",\"name\":\"ProfileInfo_name__3YrwX\"};","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\n\r\ntype MSTPType = {\r\n    isAuth: boolean\r\n}\r\ntype MDTPType = {\r\n}\r\ntype OwnType = {}\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport function withAuthRedirect<WCP>(Component: React.ComponentType<WCP>) {\r\n    let RedirectComponent: React.FC<MSTPType & MDTPType> = (props) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to={`/login`}/>\r\n\r\n        //нужно убирать isAuth, тк это пропсы именно хока и редирект компоненты\r\n        return <Component {...restProps as WCP}/>\r\n    }\r\n\r\n\r\n    return connect<MSTPType, MDTPType, WCP, AppStateType>(\r\n        mapStateToProps, {\r\n\r\n        })\r\n    (RedirectComponent)\r\n}\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/changeAvatar.e36e988f.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1FJ3J\",\"deletePostButton\":\"Post_deletePostButton__2PsCv\",\"post_icon\":\"Post_post_icon__2EubZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"PostTextarea_textarea__24_qs\",\"textareaAndLabel\":\"PostTextarea_textareaAndLabel__3Ayhr\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import style from \"../ProfileInfo.module.scss\";\r\nimport React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\ntype PropsType = {\r\n    status: string | null\r\n    updateUserStatus: (statusText: any) => void\r\n}\r\n\r\nlet Status: React.FC<PropsType> = ({status, updateUserStatus}) => {\r\n    let [editModeFlag, setEditMode] = useState(false)\r\n    let [statusText, setStatusText] = useState(status)\r\n\r\n    useEffect(() => {\r\n        setStatusText(status)\r\n    }, [status])\r\n\r\n\r\n    return <div className={style.status}>\r\n        {editModeFlag\r\n            ?\r\n            <div>\r\n                <input autoFocus={true}\r\n                       onBlur={_ => {\r\n                           setEditMode(false)\r\n                           updateUserStatus(statusText)\r\n                       }}\r\n                       className={style.status}\r\n                       value={statusText}\r\n                       onChange={(e: ChangeEvent<HTMLInputElement>) => {\r\n                           setStatusText(e.currentTarget.value)\r\n                       }}>\r\n                </input>\r\n            </div>\r\n\r\n            : <div className={style.status} onClick={() => {\r\n                setEditMode(true)\r\n            }}\r\n            >\r\n                <span>{statusText}</span>\r\n            </div>}\r\n\r\n\r\n    </div>\r\n\r\n}\r\n\r\n// @ts-ignore\r\nexport default Status;","import {Field, Form} from \"react-final-form\";\r\nimport React from \"react\";\r\nimport style from \"../ProfileInfo.module.scss\";\r\n\r\n\r\nlet ProfileContactForm = ({toggleEditMode, contacts}) => {\r\n    return (\r\n        <Form  onSubmit={formData => {\r\n            console.log(formData)\r\n        }}>\r\n            {({handleSubmit}) => (<form className={style.contacts} onSubmit={handleSubmit}>\r\n                {Object.keys(contacts).map(key => (<Field key={key}\r\n                                                          name={key}\r\n                                                          initialValue={contacts[key]}\r\n                    >{({input, meta}) => (\r\n                        <div className={style.field}>\r\n                            <label >{key}</label>\r\n                            <input  type=\"text\" {...input}/>\r\n                            {meta.touched && meta.error && <span>{meta.error}</span>}\r\n                        </div>\r\n                    )}</Field>\r\n                ))}\r\n                <button type={`submit`}>Submit</button>\r\n                <button onClick={() => {\r\n                    toggleEditMode(false)\r\n                }}>Return\r\n                </button>\r\n            </form>)}\r\n        </Form>\r\n\r\n    )\r\n}\r\n\r\nlet p = ({contacts}) => {\r\n    return (\r\n        <div className={style.contacts}>\r\n            <p><b>Contacts</b></p>\r\n            <div>\r\n                {Object.keys(contacts).map(key => (<Field key={key}\r\n                                                          name={key}\r\n                    >{({input, meta}) => (\r\n                        <div>\r\n                            <label>Text</label>\r\n                            <input type=\"text\" {...input}/>\r\n                            {meta.touched && meta.error && <span>{meta.error}</span>}\r\n                        </div>\r\n                    )}</Field>\r\n                ))}\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileContactForm","import React, {useState} from 'react';\nimport style from './ProfileInfo.module.scss';\nimport Loader from \"../../Loader/Loader\";\nimport icon from '../../../assets/images/64495.png'\nimport Status from \"./Status/Status\";\nimport changeAvatar from '../../../assets/images/changeAvatar.svg'\nimport ProfileContactForm from \"./ProfileContactForm/ProfileContactForm\";\nimport {ProfileType} from \"../../../redux/reducers/profile-reducer\";\n\ntype PropsType = {\n    profile?: ProfileType | null\n    status: string | null\n    isOwner: boolean\n    updateUserStatus: (text: string) => void\n    changeUserPhoto: (photo: any) => void\n}\n\nconst ProfileInfo: React.FC<PropsType> = (props) => {\n    let [editMode, toggleEditMode] = useState(false)\n    if (!props.profile) {\n        return <Loader/>\n    }\n\n    return (\n        <div className={style.profileInfo}>\n            <div className={style.description}>\n                <img className={style.profileImage}\n                     src={props.profile.photos.large ? props.profile.photos.large : icon}\n                     alt=\"\"/>\n\n\n            </div>\n            <div className={style.profileData}>\n                <div className={style.nameAndChangePhoto}>\n                    <div className={style.name}>{props.profile.fullName}</div>\n                    <ChangePhoto isOwner={props.isOwner} changeUserPhoto={props.changeUserPhoto}/>\n                </div>\n                <Status status={props.status}\n                        updateUserStatus={props.updateUserStatus}/>\n                {editMode\n                    ? <ProfileContactForm\n                        toggleEditMode={toggleEditMode}\n                        contacts={props.profile.contacts}/>\n                    : <div className={style.contacts}>\n                        <p><b>Contacts</b></p>\n                        <div>\n\n                            { Object.keys(props.profile.contacts).map(key => (<Contact key={key}\n                                                                                      contactKey={key}\n                                                                                      contactValue={props.profile.contacts[key]}/>))}\n                        </div>\n                        <button onClick={() => {\n                            toggleEditMode(true)\n                        }}>Change Contacts\n                        </button>\n                    </div>}\n\n            </div>\n        </div>\n    )\n}\ntype ChangePhoto = {\n    isOwner: any\n    changeUserPhoto: (photo: any) => void\n}\n\nlet ChangePhoto: React.FC<ChangePhoto> = ({isOwner, changeUserPhoto}) => {\n    return (isOwner && <label className={style.customFileUpload}>\n            <img className={style.changeAvatar} src={changeAvatar} alt=\"\"/>\n            <input type=\"file\" onChange={(e) => {\n                // @ts-ignore\n                if (e.target.files.length) {\n                    // @ts-ignore\n                    changeUserPhoto(e.target.files[0])\n                }\n\n            }}/>\n        </label>\n    )\n}\ntype ContactProps = {\n    contactKey: string\n    contactValue: string | null\n\n}\nlet Contact: React.FC<ContactProps> = ({contactKey, contactValue}) => {\n    return <div>\n        <span className={style.contactKey}>{contactKey}: </span>\n        <span className={style.contactValue}>{contactValue ? contactValue : `no info`}</span>\n    </div>\n\n}\n\nexport default ProfileInfo;\n\n\n","import React from 'react';\nimport style from './Post.module.scss';\n\ntype PropsType = {\n    deletePost: (postId: number) => void\n    key: number\n    id: number\n    text: string\n}\nconst Post: React.FC<PropsType> = (props) => {\n    return (\n        <div className={style.post}>\n            <img className={style.post_icon} src=\"https://www.searchpng.com/wp-content/uploads/2019/02/Profile-ICon.png\"\n                 alt=\"\"/>\n            <div className={style.post_content}>\n                <h2>Post headline</h2>\n                <p>{props.text}</p>\n            </div>\n            <div className={style.deletePostButton} onClick={() => {\n                props.deletePost(props.id)\n            }}>Delete\n            </div>\n\n        </div>\n\n    )\n}\n\nexport default Post;\n","import React from 'react';\r\nimport {Field, Form} from \"react-final-form\";\r\nimport {maxLength} from \"../../../../utilits/validators\";\r\nimport styles from './PostTextarea.module.scss'\r\n\r\nexport let PostTextarea = (props) => {\r\n    return (<Form\r\n            onSubmit={formData => {\r\n                props.addPost(formData.postText)\r\n            }}>\r\n            {({handleSubmit}) => (<form action=\"\" onSubmit={handleSubmit}>\r\n                <Field name={`postText`}\r\n                       placeholder={`Say something`}\r\n                       component={`textarea`}\r\n\r\n                       validate={maxLength(10)}>\r\n                    {({input, meta, placeholder}) => (\r\n                        <div className={styles.textareaAndLabel}>\r\n                            <label>Enter your post here!</label>\r\n                            <textarea placeholder={`post should be really short`} className={styles.textarea} {...input} />\r\n                            <div>\r\n                                {meta.error && meta.touched && meta.error}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Field>\r\n                <button>Submit</button>\r\n            </form>)}\r\n        </Form>\r\n    )\r\n}","import React from 'react';\nimport style from './MyPosts.module.scss';\nimport Post from \"../Post/Post\";\nimport {PostTextarea} from \"./PostTextarea/PostTextarea\";\nimport {PostData} from \"../../../redux/reducers/profile-reducer\";\n\n\ntype PropsType = {\n    posts: PostData[]\n    addPost: (text: string) => void\n    deletePost: (postKey: number) => void\n\n}\nconst MyPosts: React.FC<PropsType> = (props) => {\n    return (\n        <div className={style.my_posts}>\n            <PostTextarea addPost={props.addPost}/>\n            {props.posts.reverse().map((obj) => <Post deletePost={props.deletePost}\n                                            key={obj.id}\n                                            id={obj.id}\n                                            text={obj.text}/>)}\n        </div>\n\n    );\n};\n\n\nexport default React.memo(MyPosts);\n","\nimport {deletePost, PostData, profileActions} from \"../../../redux/reducers/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../../redux/redux-store\";\n\n\nlet mapStateToProps = (state: AppStateType) => ({\n    posts: state.profileData.posts\n})\nlet addPost = profileActions.addPost\ntype MSTP = {\n    posts: PostData[]\n}\ntype MDTP = {\n    addPost: (text: string) => void\n    deletePost: (postKey: number) => void\n}\nlet MyPostsContainer = connect<MSTP,MDTP,{},AppStateType>(mapStateToProps, {addPost, deletePost})(MyPosts)\n\nexport default MyPostsContainer;\n","import React from 'react';\nimport style from './Profile.module.scss';\n\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport {ProfileType} from \"../../redux/reducers/profile-reducer\";\n\ntype PropsType = {\n    updateUserStatus: (text: string) => void\n    changeUserPhoto: (photo: any) => void\n    profile: ProfileType | null\n    status: string | null\n    isOwner: boolean\n}\nlet Profile: React.FC<PropsType> = (props) => {\n    return (\n        <div className={style.profile}>\n            <ProfileInfo profile={props.profile}\n                         status={props.status}\n                         isOwner={props.isOwner}\n                         updateUserStatus={props.updateUserStatus}\n                         changeUserPhoto={props.changeUserPhoto}/>\n            <MyPostsContainer />\n\n        </div>\n    )\n\n\n}\n\nexport default Profile;\n","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    changeUserPhoto,\r\n    getProfileById,\r\n    getUserStatusById, ProfileType,\r\n    updateUserStatus,\r\n} from \"../../redux/reducers/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getProfile, getStatus} from \"../../redux/selectors/selectors\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\nlet ProfileContainer: React.FC<OwnProps & MSTP & MDTP & RouteComponentProps<PathParamsType>> = (props) => {\r\n    useEffect(() => {\r\n        let userId = +props.match.params.userId\r\n        if (!userId) {\r\n            userId = 7668;\r\n        }\r\n        props.getProfileById(userId)\r\n        props.getUserStatusById(userId)\r\n\r\n    }, [props.match.params.userId])\r\n\r\n    return <Profile {...props} isOwner={!props.match.params.userId}/>\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): MSTP => ({\r\n    profile: getProfile(state),\r\n    status: getStatus(state)\r\n})\r\ntype MSTP = {\r\n    profile: ProfileType | null\r\n    status: string | null\r\n}\r\ntype MDTP = {\r\n    getProfileById: (id: number) => void\r\n    getUserStatusById: (id: number) => void\r\n    updateUserStatus: (text: string) => void\r\n    changeUserPhoto: (photo: any) => void //todo formData typization for photos\r\n}\r\n\r\ntype OwnProps = {\r\n    isOwner: boolean\r\n}\r\nexport default compose<React.ComponentType>(\r\n    connect<MSTP, MDTP, OwnProps, AppStateType>(mapStateToProps, {\r\n        getProfileById,\r\n        getUserStatusById,\r\n        updateUserStatus,\r\n        changeUserPhoto\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}